<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\build\SX1261MB2BAS\ASFS.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\build\SX1261MB2BAS\ASFS.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6220000: Last Updated: Wed Sep 11 16:20:16 2024
<BR><P>
<H3>Maximum Stack Usage =        400 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; apps_common_sx126x_irq_process &rArr; on_rx_done &rArr; apps_common_sx126x_receive &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[9]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SysTick_Handler</a><BR>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[39]">ADC3_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[1e]">CAN1_RX0_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[1d]">CAN1_TX_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[4a]">COMP_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[47]">DFSDM1_FLT0_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[48]">DFSDM1_FLT1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[49]">DFSDM1_FLT2_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[34]">DFSDM1_FLT3_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[42]">DMA2_Channel1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[43]">DMA2_Channel2_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[44]">DMA2_Channel3_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[45]">DMA2_Channel4_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[46]">DMA2_Channel5_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[4e]">DMA2_Channel6_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[4f]">DMA2_Channel7_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from smtc_hal_mcu_gpio_stm32l4.o(.text.EXTI0_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from smtc_hal_mcu_gpio_stm32l4.o(.text.EXTI15_10_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from smtc_hal_mcu_gpio_stm32l4.o(.text.EXTI1_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from smtc_hal_mcu_gpio_stm32l4.o(.text.EXTI2_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from smtc_hal_mcu_gpio_stm32l4.o(.text.EXTI3_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from smtc_hal_mcu_gpio_stm32l4.o(.text.EXTI4_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from smtc_hal_mcu_gpio_stm32l4.o(.text.EXTI9_5_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[3a]">FMC_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[5a]">FPU_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[53]">I2C3_ER_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[52]">I2C3_EV_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[58]">LCD_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[4b]">LPTIM1_IRQHandler</a> from smtc_hal_mcu_timer_stm32l4.o(.text.LPTIM1_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[4c]">LPTIM2_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[50]">LPUART1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[4d]">OTG_FS_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[b]">PVD_PVM_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[51]">QUADSPI_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[59]">RNG_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[33]">RTC_Alarm_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[d]">RTC_WKUP_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[54]">SAI1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[55]">SAI2_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[3b]">SDMMC1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[3d]">SPI3_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[56]">SWPMI1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[5c]">SystemInit</a> from system_stm32l4xx.o(.text.SystemInit) referenced from startup_stm32l476xx.o(.text)
 <LI><a href="#[c]">TAMP_STAMP_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_TIM15_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_TIM17_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[23]">TIM1_UP_TIM16_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[3c]">TIM5_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[40]">TIM6_DAC_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[41]">TIM7_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[35]">TIM8_BRK_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[38]">TIM8_CC_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[37]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[36]">TIM8_UP_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[57]">TSC_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[3e]">UART4_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[3f]">UART5_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from smtc_hal_mcu_uart_stm32l4.o(.text.USART2_IRQHandler) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32l476xx.o(.text) referenced from startup_stm32l476xx.o(RESET)
 <LI><a href="#[5d]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32l476xx.o(.text)
 <LI><a href="#[5f]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0vsprintf)
 <LI><a href="#[5b]">main</a> from main_asfs_app.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[5e]">radio_on_dio_irq</a> from apps_common.o(.text.radio_on_dio_irq) referenced 2 times from apps_common.o(.text.apps_common_sx126x_get_context)
 <LI><a href="#[60]">smtc_shield_sx1261mb2bas_get_pa_pwr_cfg</a> from smtc_shield_sx1261mb2bas.o(.text.smtc_shield_sx1261mb2bas_get_pa_pwr_cfg) referenced from apps_common.o(.data.shield)
 <LI><a href="#[64]">smtc_shield_sx1261mb2bas_get_pinout</a> from smtc_shield_sx1261mb2bas.o(.text.smtc_shield_sx1261mb2bas_get_pinout) referenced from apps_common.o(.data.shield)
 <LI><a href="#[62]">smtc_shield_sx1261mb2bas_get_reg_mode</a> from smtc_shield_sx1261mb2bas.o(.text.smtc_shield_sx1261mb2bas_get_reg_mode) referenced from apps_common.o(.data.shield)
 <LI><a href="#[63]">smtc_shield_sx1261mb2bas_get_xosc_cfg</a> from smtc_shield_sx1261mb2bas.o(.text.smtc_shield_sx1261mb2bas_get_xosc_cfg) referenced from apps_common.o(.data.shield)
 <LI><a href="#[61]">smtc_shield_sx1261mb2bas_is_dio2_set_as_rf_switch</a> from smtc_shield_sx1261mb2bas.o(.text.smtc_shield_sx1261mb2bas_is_dio2_set_as_rf_switch) referenced from apps_common.o(.data.shield)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[5d]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(.text)
</UL>
<P><STRONG><a name="[d5]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[65]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[76]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[d6]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[d7]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[d8]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[d9]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[da]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>DFSDM1_FLT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>DFSDM1_FLT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>DFSDM1_FLT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>DFSDM1_FLT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>DMA2_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>DMA2_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>LCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>LPTIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_PVM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>QUADSPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>SAI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SDMMC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>SWPMI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>TSC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l476xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[ba]"></a>rand</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_rx_done
</UL>

<P><STRONG><a name="[db]"></a>srand</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rand.o(.text), UNUSED)

<P><STRONG><a name="[68]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[dc]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[dd]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[67]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[b9]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_rx_done
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_spi_init
</UL>

<P><STRONG><a name="[de]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[69]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[cc]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vprint
</UL>

<P><STRONG><a name="[df]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[d4]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[6a]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[e0]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[6d]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>

<P><STRONG><a name="[71]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[72]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[73]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[74]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[75]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[d1]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[66]"></a>__scatterload</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[e1]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[6c]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[e2]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[6b]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[e3]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[6e]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[e4]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[70]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[6f]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, smtc_hal_mcu_gpio_stm32l4.o(.text.EXTI0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 350 bytes, Stack size 16 bytes, smtc_hal_mcu_gpio_stm32l4.o(.text.EXTI15_10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI15_10_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, smtc_hal_mcu_gpio_stm32l4.o(.text.EXTI1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, smtc_hal_mcu_gpio_stm32l4.o(.text.EXTI2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, smtc_hal_mcu_gpio_stm32l4.o(.text.EXTI3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, smtc_hal_mcu_gpio_stm32l4.o(.text.EXTI4_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 278 bytes, Stack size 16 bytes, smtc_hal_mcu_gpio_stm32l4.o(.text.EXTI9_5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI9_5_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[be]"></a>LL_EXTI_Init</STRONG> (Thumb, 368 bytes, Stack size 8 bytes, stm32l4xx_ll_exti.o(.text.LL_EXTI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_init_input
</UL>

<P><STRONG><a name="[bd]"></a>LL_GPIO_Init</STRONG> (Thumb, 214 bytes, Stack size 36 bytes, stm32l4xx_ll_gpio.o(.text.LL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_uart_init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_spi_init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_init_output
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_init_input
</UL>

<P><STRONG><a name="[bf]"></a>LL_Init1msTick</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32l4xx_ll_utils.o(.text.LL_Init1msTick))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_init
</UL>

<P><STRONG><a name="[77]"></a>LL_RCC_GetUARTClockFreq</STRONG> (Thumb, 232 bytes, Stack size 16 bytes, stm32l4xx_ll_rcc.o(.text.LL_RCC_GetUARTClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LL_RCC_GetUARTClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSystemClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
</UL>

<P><STRONG><a name="[79]"></a>LL_RCC_GetUSARTClockFreq</STRONG> (Thumb, 202 bytes, Stack size 8 bytes, stm32l4xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_RCC_GetUSARTClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSystemClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
</UL>

<P><STRONG><a name="[c1]"></a>LL_SPI_Init</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, stm32l4xx_ll_spi.o(.text.LL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LL_SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_spi_init
</UL>

<P><STRONG><a name="[c0]"></a>LL_SetSystemCoreClock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l4xx_ll_utils.o(.text.LL_SetSystemCoreClock))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_init
</UL>

<P><STRONG><a name="[7a]"></a>LL_USART_Init</STRONG> (Thumb, 232 bytes, Stack size 16 bytes, stm32l4xx_ll_usart.o(.text.LL_USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LL_USART_Init &rArr; LL_RCC_GetUARTClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUSARTClockFreq
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUARTClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_uart_init
</UL>

<P><STRONG><a name="[c3]"></a>LL_mDelay</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, stm32l4xx_ll_utils.o(.text.LL_mDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_mDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_reset
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_cad_after_delay
</UL>

<P><STRONG><a name="[4b]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, smtc_hal_mcu_timer_stm32l4.o(.text.LPTIM1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>SystemInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, system_stm32l4xx.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(.text)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, smtc_hal_mcu_uart_stm32l4.o(.text.USART2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l476xx.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>apps_common_shield_init</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, apps_common.o(.text.apps_common_shield_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = apps_common_shield_init &rArr; smtc_hal_mcu_gpio_init_output &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_init_output
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_shield_pinout_mapping_get_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7e]"></a>apps_common_sx126x_get_context</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, apps_common.o(.text.apps_common_sx126x_get_context))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = apps_common_sx126x_get_context &rArr; smtc_hal_mcu_gpio_init_input &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_spi_init
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_enable_irq
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_init_output
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_init_input
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_shield_pinout_mapping_get_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[82]"></a>apps_common_sx126x_handle_post_rx</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, apps_common.o(.text.apps_common_sx126x_handle_post_rx))
<BR><BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_set_state
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_rx_done
</UL>

<P><STRONG><a name="[84]"></a>apps_common_sx126x_handle_pre_rx</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, apps_common.o(.text.apps_common_sx126x_handle_pre_rx))
<BR><BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_set_state
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_rx_done
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_cad_done_detected
</UL>

<P><STRONG><a name="[85]"></a>apps_common_sx126x_init</STRONG> (Thumb, 890 bytes, Stack size 24 bytes, apps_common.o(.text.apps_common_sx126x_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = apps_common_sx126x_init &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_cal
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_dio3_as_tcxo_ctrl
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_dio2_as_rf_sw_ctrl
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_reg_mode
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_init_retention_list
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_reset
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8d]"></a>apps_common_sx126x_irq_process</STRONG> (Thumb, 340 bytes, Stack size 16 bytes, apps_common.o(.text.apps_common_sx126x_irq_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = apps_common_sx126x_irq_process &rArr; on_rx_done &rArr; apps_common_sx126x_receive &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_rx_done
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_cad_done_undetected
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_preamble_undetected
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_preamble_detected
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_cad_done_detected
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_handle_rx_done
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_tx_done
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_get_and_clear_irq_status
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[96]"></a>apps_common_sx126x_print_config</STRONG> (Thumb, 608 bytes, Stack size 24 bytes, apps_common.o(.text.apps_common_sx126x_print_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = apps_common_sx126x_print_config &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_lora_pkt_len_modes_to_str
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_lora_cr_to_str
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_lora_bw_to_str
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_lora_sf_to_str
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_fallback_modes_to_str
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_pkt_type_to_str
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9d]"></a>apps_common_sx126x_print_version_info</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, apps_common.o(.text.apps_common_sx126x_print_version_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = apps_common_sx126x_print_version_info &rArr; common_version_print &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_version_print
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9f]"></a>apps_common_sx126x_radio_init</STRONG> (Thumb, 1648 bytes, Stack size 24 bytes, apps_common.o(.text.apps_common_sx126x_radio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = apps_common_sx126x_radio_init &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_lora_sync_word
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_lora_pkt_params
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_lora_mod_params
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_cfg_rx_boosted
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_rx_tx_fallback_mode
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_tx_params
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_pa_cfg
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_rf_freq
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_pkt_type
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_standby
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_app
</UL>

<P><STRONG><a name="[aa]"></a>apps_common_sx126x_receive</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, apps_common.o(.text.apps_common_sx126x_receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = apps_common_sx126x_receive &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_read_buffer
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_get_rx_buffer_status
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_rx_done
</UL>

<P><STRONG><a name="[9e]"></a>common_version_print</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, common_version.o(.text.common_version_print))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = common_version_print &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_print_version_info
</UL>

<P><STRONG><a name="[ad]"></a>get_time_on_air_in_ms</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, apps_common.o(.text.get_time_on_air_in_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_time_on_air_in_ms &rArr; sx126x_get_lora_time_on_air_in_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_get_lora_time_on_air_in_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_rx_done
</UL>

<P><STRONG><a name="[87]"></a>hal_mcu_trace_print</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, smtc_hal_dbg_trace.o(.text.hal_mcu_trace_print))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vprint
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_preamble_undetected
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_cad_done_detected
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_app
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_cad_after_delay
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_irq_process
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_receive
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_radio_init
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_init
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_version_print
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_print_version_info
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_print_config
</UL>

<P><STRONG><a name="[b0]"></a>init_app</STRONG> (Thumb, 388 bytes, Stack size 24 bytes, main_asfs_app.o(.text.init_app))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = init_app &rArr; apps_common_sx126x_radio_init &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_cad_params
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_convert_timeout_in_ms_to_rtc_step
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_cad_after_delay
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_radio_init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_cad_done_undetected
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5b]"></a>main</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, main_asfs_app.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = main &rArr; apps_common_sx126x_irq_process &rArr; on_rx_done &rArr; apps_common_sx126x_receive &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_app
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_clear_irq_status
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_dio_irq_params
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_irq_process
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_print_version_info
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_print_config
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_shield_init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_get_context
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[95]"></a>on_cad_done_detected</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, main_asfs_app.o(.text.on_cad_done_detected))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = on_cad_done_detected &rArr; start_cad_after_delay &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_cad_after_delay
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_handle_pre_rx
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_irq_process
</UL>

<P><STRONG><a name="[94]"></a>on_cad_done_undetected</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, main_asfs_app.o(.text.on_cad_done_undetected))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = on_cad_done_undetected &rArr; init_app &rArr; apps_common_sx126x_radio_init &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_app
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_irq_process
</UL>

<P><STRONG><a name="[93]"></a>on_preamble_detected</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main_asfs_app.o(.text.on_preamble_detected))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_irq_process
</UL>

<P><STRONG><a name="[92]"></a>on_preamble_undetected</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, main_asfs_app.o(.text.on_preamble_undetected))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = on_preamble_undetected &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_cad
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_irq_process
</UL>

<P><STRONG><a name="[91]"></a>on_rx_done</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, main_asfs_app.o(.text.on_rx_done))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = on_rx_done &rArr; apps_common_sx126x_receive &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_rx
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_time_on_air_in_ms
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_handle_post_rx
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_handle_pre_rx
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_irq_process
</UL>

<P><STRONG><a name="[8f]"></a>on_tx_done</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, apps_common.o(.text.on_tx_done))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_irq_process
</UL>

<P><STRONG><a name="[5e]"></a>radio_on_dio_irq</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, apps_common.o(.text.radio_on_dio_irq))
<BR>[Address Reference Count : 1]<UL><LI> apps_common.o(.text.apps_common_sx126x_get_context)
</UL>
<P><STRONG><a name="[80]"></a>smtc_hal_mcu_gpio_enable_irq</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, smtc_hal_mcu_gpio_stm32l4.o(.text.smtc_hal_mcu_gpio_enable_irq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smtc_hal_mcu_gpio_enable_irq
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_get_context
</UL>

<P><STRONG><a name="[c7]"></a>smtc_hal_mcu_gpio_get_state</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, smtc_hal_mcu_gpio_stm32l4.o(.text.smtc_hal_mcu_gpio_get_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smtc_hal_mcu_gpio_get_state
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_read
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_write
</UL>

<P><STRONG><a name="[7f]"></a>smtc_hal_mcu_gpio_init_input</STRONG> (Thumb, 730 bytes, Stack size 64 bytes, smtc_hal_mcu_gpio_stm32l4.o(.text.smtc_hal_mcu_gpio_init_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = smtc_hal_mcu_gpio_init_input &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_stm32l4_enable_clock
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_get_context
</UL>

<P><STRONG><a name="[7d]"></a>smtc_hal_mcu_gpio_init_output</STRONG> (Thumb, 242 bytes, Stack size 40 bytes, smtc_hal_mcu_gpio_stm32l4.o(.text.smtc_hal_mcu_gpio_init_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = smtc_hal_mcu_gpio_init_output &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_stm32l4_enable_clock
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_shield_init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_get_context
</UL>

<P><STRONG><a name="[83]"></a>smtc_hal_mcu_gpio_set_state</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, smtc_hal_mcu_gpio_stm32l4.o(.text.smtc_hal_mcu_gpio_set_state))
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_reset
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_read
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_write
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_handle_post_rx
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_handle_pre_rx
</UL>

<P><STRONG><a name="[b4]"></a>smtc_hal_mcu_init</STRONG> (Thumb, 290 bytes, Stack size 24 bytes, smtc_hal_mcu_stm32l4.o(.text.smtc_hal_mcu_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = smtc_hal_mcu_init
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetSystemCoreClock
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_Init1msTick
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[81]"></a>smtc_hal_mcu_spi_init</STRONG> (Thumb, 336 bytes, Stack size 56 bytes, smtc_hal_mcu_spi_stm32l4.o(.text.smtc_hal_mcu_spi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = smtc_hal_mcu_spi_init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_get_context
</UL>

<P><STRONG><a name="[c8]"></a>smtc_hal_mcu_spi_rw_buffer</STRONG> (Thumb, 170 bytes, Stack size 20 bytes, smtc_hal_mcu_spi_stm32l4.o(.text.smtc_hal_mcu_spi_rw_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = smtc_hal_mcu_spi_rw_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_read
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_write
</UL>

<P><STRONG><a name="[c2]"></a>smtc_hal_mcu_uart_init</STRONG> (Thumb, 296 bytes, Stack size 56 bytes, smtc_hal_mcu_uart_stm32l4.o(.text.smtc_hal_mcu_uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = smtc_hal_mcu_uart_init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[cd]"></a>smtc_hal_mcu_uart_send</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, smtc_hal_mcu_uart_stm32l4.o(.text.smtc_hal_mcu_uart_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smtc_hal_mcu_uart_send
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vprint
</UL>

<P><STRONG><a name="[7c]"></a>smtc_shield_pinout_mapping_get_gpio_cfg</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, smtc_shield_pinout_mapping.o(.text.smtc_shield_pinout_mapping_get_gpio_cfg))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_shield_init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_get_context
</UL>

<P><STRONG><a name="[60]"></a>smtc_shield_sx1261mb2bas_get_pa_pwr_cfg</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, smtc_shield_sx1261mb2bas.o(.text.smtc_shield_sx1261mb2bas_get_pa_pwr_cfg))
<BR>[Address Reference Count : 1]<UL><LI> apps_common.o(.data.shield)
</UL>
<P><STRONG><a name="[64]"></a>smtc_shield_sx1261mb2bas_get_pinout</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, smtc_shield_sx1261mb2bas.o(.text.smtc_shield_sx1261mb2bas_get_pinout))
<BR>[Address Reference Count : 1]<UL><LI> apps_common.o(.data.shield)
</UL>
<P><STRONG><a name="[62]"></a>smtc_shield_sx1261mb2bas_get_reg_mode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, smtc_shield_sx1261mb2bas.o(.text.smtc_shield_sx1261mb2bas_get_reg_mode))
<BR>[Address Reference Count : 1]<UL><LI> apps_common.o(.data.shield)
</UL>
<P><STRONG><a name="[63]"></a>smtc_shield_sx1261mb2bas_get_xosc_cfg</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, smtc_shield_sx1261mb2bas.o(.text.smtc_shield_sx1261mb2bas_get_xosc_cfg))
<BR>[Address Reference Count : 1]<UL><LI> apps_common.o(.data.shield)
</UL>
<P><STRONG><a name="[61]"></a>smtc_shield_sx1261mb2bas_is_dio2_set_as_rf_switch</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, smtc_shield_sx1261mb2bas.o(.text.smtc_shield_sx1261mb2bas_is_dio2_set_as_rf_switch))
<BR>[Address Reference Count : 1]<UL><LI> apps_common.o(.data.shield)
</UL>
<P><STRONG><a name="[c4]"></a>sx126x_add_registers_to_retention_list</STRONG> (Thumb, 234 bytes, Stack size 56 bytes, sx126x.o(.text.sx126x_add_registers_to_retention_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = sx126x_add_registers_to_retention_list &rArr; sx126x_hal_read &rArr; smtc_hal_mcu_spi_rw_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_read
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_init_retention_list
</UL>

<P><STRONG><a name="[8c]"></a>sx126x_cal</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, sx126x.o(.text.sx126x_cal))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = sx126x_cal &rArr; sx126x_hal_write &rArr; smtc_hal_mcu_spi_rw_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_init
</UL>

<P><STRONG><a name="[a6]"></a>sx126x_cfg_rx_boosted</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, sx126x.o(.text.sx126x_cfg_rx_boosted))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = sx126x_cfg_rx_boosted &rArr; sx126x_hal_write &rArr; smtc_hal_mcu_spi_rw_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_radio_init
</UL>

<P><STRONG><a name="[b7]"></a>sx126x_clear_irq_status</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, sx126x.o(.text.sx126x_clear_irq_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = sx126x_clear_irq_status &rArr; sx126x_hal_write &rArr; smtc_hal_mcu_spi_rw_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b1]"></a>sx126x_convert_timeout_in_ms_to_rtc_step</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sx126x.o(.text.sx126x_convert_timeout_in_ms_to_rtc_step))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_app
</UL>

<P><STRONG><a name="[98]"></a>sx126x_fallback_modes_to_str</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, sx126x_str.o(.text.sx126x_fallback_modes_to_str))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_print_config
</UL>

<P><STRONG><a name="[8e]"></a>sx126x_get_and_clear_irq_status</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, sx126x.o(.text.sx126x_get_and_clear_irq_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = sx126x_get_and_clear_irq_status &rArr; sx126x_hal_read &rArr; smtc_hal_mcu_spi_rw_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_read
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_irq_process
</UL>

<P><STRONG><a name="[ae]"></a>sx126x_get_lora_time_on_air_in_ms</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, sx126x.o(.text.sx126x_get_lora_time_on_air_in_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sx126x_get_lora_time_on_air_in_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_time_on_air_in_ms
</UL>

<P><STRONG><a name="[ab]"></a>sx126x_get_rx_buffer_status</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, sx126x.o(.text.sx126x_get_rx_buffer_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = sx126x_get_rx_buffer_status &rArr; sx126x_hal_read &rArr; smtc_hal_mcu_spi_rw_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_read
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_receive
</UL>

<P><STRONG><a name="[c5]"></a>sx126x_hal_read</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, sx126x_hal.o(.text.sx126x_hal_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = sx126x_hal_read &rArr; smtc_hal_mcu_spi_rw_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_spi_rw_buffer
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_get_state
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_set_state
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_add_registers_to_retention_list
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_stop_rtc
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_get_and_clear_irq_status
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_read_buffer
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_get_rx_buffer_status
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_lora_sync_word
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_lora_pkt_params
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_lora_mod_params
</UL>

<P><STRONG><a name="[c9]"></a>sx126x_hal_reset</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, sx126x_hal.o(.text.sx126x_hal_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = sx126x_hal_reset &rArr; LL_mDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_mDelay
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_set_state
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_reset
</UL>

<P><STRONG><a name="[c6]"></a>sx126x_hal_write</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, sx126x_hal.o(.text.sx126x_hal_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = sx126x_hal_write &rArr; smtc_hal_mcu_spi_rw_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_spi_rw_buffer
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_get_state
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_set_state
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_add_registers_to_retention_list
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_stop_rtc
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_rx
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_cad
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_cad_params
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_clear_irq_status
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_dio_irq_params
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_get_and_clear_irq_status
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_lora_sync_word
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_lora_pkt_params
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_lora_mod_params
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_cfg_rx_boosted
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_rx_tx_fallback_mode
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_tx_params
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_pa_cfg
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_rf_freq
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_pkt_type
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_standby
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_cal
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_dio3_as_tcxo_ctrl
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_dio2_as_rf_sw_ctrl
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_reg_mode
</UL>

<P><STRONG><a name="[90]"></a>sx126x_handle_rx_done</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sx126x.o(.text.sx126x_handle_rx_done))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = sx126x_handle_rx_done &rArr; sx126x_stop_rtc &rArr; sx126x_hal_read &rArr; smtc_hal_mcu_spi_rw_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_stop_rtc
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_irq_process
</UL>

<P><STRONG><a name="[88]"></a>sx126x_init_retention_list</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sx126x.o(.text.sx126x_init_retention_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = sx126x_init_retention_list &rArr; sx126x_add_registers_to_retention_list &rArr; sx126x_hal_read &rArr; smtc_hal_mcu_spi_rw_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_add_registers_to_retention_list
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_init
</UL>

<P><STRONG><a name="[9a]"></a>sx126x_lora_bw_to_str</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, sx126x_str.o(.text.sx126x_lora_bw_to_str))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_print_config
</UL>

<P><STRONG><a name="[9b]"></a>sx126x_lora_cr_to_str</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sx126x_str.o(.text.sx126x_lora_cr_to_str))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_print_config
</UL>

<P><STRONG><a name="[9c]"></a>sx126x_lora_pkt_len_modes_to_str</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, sx126x_str.o(.text.sx126x_lora_pkt_len_modes_to_str))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_print_config
</UL>

<P><STRONG><a name="[99]"></a>sx126x_lora_sf_to_str</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sx126x_str.o(.text.sx126x_lora_sf_to_str))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_print_config
</UL>

<P><STRONG><a name="[97]"></a>sx126x_pkt_type_to_str</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, sx126x_str.o(.text.sx126x_pkt_type_to_str))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_print_config
</UL>

<P><STRONG><a name="[ac]"></a>sx126x_read_buffer</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, sx126x.o(.text.sx126x_read_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = sx126x_read_buffer &rArr; sx126x_hal_read &rArr; smtc_hal_mcu_spi_rw_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_read
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_receive
</UL>

<P><STRONG><a name="[86]"></a>sx126x_reset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sx126x.o(.text.sx126x_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = sx126x_reset &rArr; sx126x_hal_reset &rArr; LL_mDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_init
</UL>

<P><STRONG><a name="[b8]"></a>sx126x_set_cad</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, sx126x.o(.text.sx126x_set_cad))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = sx126x_set_cad &rArr; sx126x_hal_write &rArr; smtc_hal_mcu_spi_rw_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_preamble_undetected
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_cad_after_delay
</UL>

<P><STRONG><a name="[b2]"></a>sx126x_set_cad_params</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, sx126x.o(.text.sx126x_set_cad_params))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = sx126x_set_cad_params &rArr; sx126x_hal_write &rArr; smtc_hal_mcu_spi_rw_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_app
</UL>

<P><STRONG><a name="[8a]"></a>sx126x_set_dio2_as_rf_sw_ctrl</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, sx126x.o(.text.sx126x_set_dio2_as_rf_sw_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = sx126x_set_dio2_as_rf_sw_ctrl &rArr; sx126x_hal_write &rArr; smtc_hal_mcu_spi_rw_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_init
</UL>

<P><STRONG><a name="[8b]"></a>sx126x_set_dio3_as_tcxo_ctrl</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, sx126x.o(.text.sx126x_set_dio3_as_tcxo_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = sx126x_set_dio3_as_tcxo_ctrl &rArr; sx126x_hal_write &rArr; smtc_hal_mcu_spi_rw_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_init
</UL>

<P><STRONG><a name="[b6]"></a>sx126x_set_dio_irq_params</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, sx126x.o(.text.sx126x_set_dio_irq_params))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = sx126x_set_dio_irq_params &rArr; sx126x_hal_write &rArr; smtc_hal_mcu_spi_rw_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a7]"></a>sx126x_set_lora_mod_params</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, sx126x.o(.text.sx126x_set_lora_mod_params))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = sx126x_set_lora_mod_params &rArr; sx126x_hal_read &rArr; smtc_hal_mcu_spi_rw_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_read
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_radio_init
</UL>

<P><STRONG><a name="[a8]"></a>sx126x_set_lora_pkt_params</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, sx126x.o(.text.sx126x_set_lora_pkt_params))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = sx126x_set_lora_pkt_params &rArr; sx126x_hal_read &rArr; smtc_hal_mcu_spi_rw_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_read
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_radio_init
</UL>

<P><STRONG><a name="[a9]"></a>sx126x_set_lora_sync_word</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, sx126x.o(.text.sx126x_set_lora_sync_word))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = sx126x_set_lora_sync_word &rArr; sx126x_hal_read &rArr; smtc_hal_mcu_spi_rw_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_read
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_radio_init
</UL>

<P><STRONG><a name="[a3]"></a>sx126x_set_pa_cfg</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, sx126x.o(.text.sx126x_set_pa_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = sx126x_set_pa_cfg &rArr; sx126x_hal_write &rArr; smtc_hal_mcu_spi_rw_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_radio_init
</UL>

<P><STRONG><a name="[a1]"></a>sx126x_set_pkt_type</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, sx126x.o(.text.sx126x_set_pkt_type))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = sx126x_set_pkt_type &rArr; sx126x_hal_write &rArr; smtc_hal_mcu_spi_rw_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_radio_init
</UL>

<P><STRONG><a name="[89]"></a>sx126x_set_reg_mode</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, sx126x.o(.text.sx126x_set_reg_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = sx126x_set_reg_mode &rArr; sx126x_hal_write &rArr; smtc_hal_mcu_spi_rw_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_init
</UL>

<P><STRONG><a name="[a2]"></a>sx126x_set_rf_freq</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, sx126x.o(.text.sx126x_set_rf_freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = sx126x_set_rf_freq &rArr; sx126x_hal_write &rArr; smtc_hal_mcu_spi_rw_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_radio_init
</UL>

<P><STRONG><a name="[bb]"></a>sx126x_set_rx</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, sx126x.o(.text.sx126x_set_rx))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = sx126x_set_rx &rArr; sx126x_hal_write &rArr; smtc_hal_mcu_spi_rw_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_rx_done
</UL>

<P><STRONG><a name="[a5]"></a>sx126x_set_rx_tx_fallback_mode</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, sx126x.o(.text.sx126x_set_rx_tx_fallback_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = sx126x_set_rx_tx_fallback_mode &rArr; sx126x_hal_write &rArr; smtc_hal_mcu_spi_rw_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_radio_init
</UL>

<P><STRONG><a name="[a0]"></a>sx126x_set_standby</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, sx126x.o(.text.sx126x_set_standby))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = sx126x_set_standby &rArr; sx126x_hal_write &rArr; smtc_hal_mcu_spi_rw_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_radio_init
</UL>

<P><STRONG><a name="[a4]"></a>sx126x_set_tx_params</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, sx126x.o(.text.sx126x_set_tx_params))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = sx126x_set_tx_params &rArr; sx126x_hal_write &rArr; smtc_hal_mcu_spi_rw_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apps_common_sx126x_radio_init
</UL>

<P><STRONG><a name="[ca]"></a>sx126x_stop_rtc</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, sx126x.o(.text.sx126x_stop_rtc))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = sx126x_stop_rtc &rArr; sx126x_hal_read &rArr; smtc_hal_mcu_spi_rw_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_read
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_hal_write
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_handle_rx_done
</UL>

<P><STRONG><a name="[b5]"></a>uart_init</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, uart_init.o(.text.uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = uart_init &rArr; smtc_hal_mcu_uart_init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_uart_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[af]"></a>vprint</STRONG> (Thumb, 54 bytes, Stack size 272 bytes, uart_init.o(.text.vprint))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_uart_send
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>

<P><STRONG><a name="[ce]"></a>__0vsprintf</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[e5]"></a>__1vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[e6]"></a>__2vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[e7]"></a>__c89vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[cb]"></a>vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vprint
</UL>

<P><STRONG><a name="[e8]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[e9]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[ea]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[b3]"></a>start_cad_after_delay</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, main_asfs_app.o(.text.start_cad_after_delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = start_cad_after_delay &rArr; hal_mcu_trace_print &rArr; vprint &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sx126x_set_cad
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_mDelay
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_mcu_trace_print
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_cad_done_detected
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_app
</UL>

<P><STRONG><a name="[78]"></a>RCC_GetSystemClockFreq</STRONG> (Thumb, 230 bytes, Stack size 0 bytes, stm32l4xx_ll_rcc.o(.text.RCC_GetSystemClockFreq))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUSARTClockFreq
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUARTClockFreq
</UL>

<P><STRONG><a name="[bc]"></a>smtc_hal_mcu_gpio_stm32l4_enable_clock</STRONG> (Thumb, 230 bytes, Stack size 4 bytes, smtc_hal_mcu_gpio_stm32l4.o(.text.smtc_hal_mcu_gpio_stm32l4_enable_clock))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = smtc_hal_mcu_gpio_stm32l4_enable_clock
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_init_output
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtc_hal_mcu_gpio_init_input
</UL>

<P><STRONG><a name="[d0]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[cf]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
</UL>

<P><STRONG><a name="[d3]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[d2]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[5f]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0vsprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
